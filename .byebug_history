c
decoded_token.present?
decoded_token.present
decoded_token
c
cc
c
decoded_token
c
decoded_token
c
exit
decoded_token
decode_token
c
rescue JWT::ImmatureSignature
rescue JWT::ExpiredSignature
 decoded_token = JWT.decode token, nil, false
c
 Kernel.const_get(gfd)
 Kernel.const_get()
 Kernel.const_get("fdgfd")
 Kernel.const_get(@model)
 Kernel.const_get(@model).find(@data['userid'].to_i)
user = Kernel.const_get(@model).find(@data['userid'].to_i)
time = @data['time'].to_time+ 1.hour > Time.now
c
decoded_token = JWT.decode token, nil, false
@model = model
model
token
exit
Kernel.const_get(classname)
Kernel.const_get(classname).methods
classname = 'Integer'
eval classname + '.methods'
classname = 'Integer'
Model(@data['userid'])
@data['userid']
@data['userid'].capitalize!
@data['userid']
@data['userid'].capitalize!
@data['userid']
@data['userid'].capitalize!
@data['userid'].capitalize!.new
@data['userid'].capitalize!
@data['userid'].Capitalize
@data['userid'].Capitalize!
@data['userid']
@data
@data['time'].to_time+ 1.hour > Time.now
@data['time'].to_time > Time.now
@data['time'].to_time
@data['time']
@data
c
 @data = decoded_token[0]['data']
 decoded_token = JWT.decode token, nil, false
c
exit
decoded_token = JWT.decode @token, nil, false
token
tokken
c
@token
c
 @token
c
@data['userid']
@data.userid
@data
exit
@data['data']
@data
@data'
exit
@data[0]['data']['userid']
@data[0]['data'].userid
@data[0]['data']
@data[0]
@data[0].data
@data[0].dats
@data[0].date
@data[0]
@data
exit
Time.now.to_s
Time.now.to_s.to_i
Time.now.to_s.to_time
Time.now.to_s
Time.now
Date.today + "g"
Date.today
Date.today.to_s.split("-").join("")
Date(Date.today.to_s.split("-").join(""))
Date.today.to_s.split("-").join("").to_date
Date.today.to_s.split("-").join("")
Date.today.to_s.split("-")
Date.today.to_s.split("")
Date.today.to_s
Date.today.to_a
Date.today.to_s
Date.today
@date
